# Title: Comparison of VG Giraffe and Linear Reference Mapping Using Minimap2
# This pipeline compares VG Giraffe graph-based mapping results with linear reference mapping results from Minimap2.

# Step 1: Extract Reference Paths from the VG Graph
# Use `vg paths` to extract linear references from the graph file.
vg paths -F -p path.list -x cactus_autoindex_new.giraffe.gbz > ref.paths.fa

# The path.list file has the ref paths
# Output contains the linearized reference sequence
# Update the VG graph to specify a reference set for further analysis.
vg gbwt -Z \
  --set-reference Chr01_Sbiv3.0 \
  --set-reference Chr02_Sbiv3.0 \
  --set-reference Chr03_Sbiv3.0 \
  --set-reference Chr04_Sbiv3.0 \
  --set-reference Chr05_Sbiv3.0 \
  --set-reference Chr06_Sbiv3.0 \
  --set-reference Chr07_Sbiv3.0 \
  --set-reference Chr08_Sbiv3.0 \
  --set-reference Chr09_Sbiv3.0 \
  --set-reference Chr10_Sbiv3.0 \
  --gbz-format -g cactus_autoindex_new.giraffe.ref_set.gbz cactus_autoindex_new.giraffe.gbz

# verify updated reference paths to confirm correctness.
vg paths -M -x cactus_autoindex_new.giraffe.ref_set.gbz

# Repeat mapping with the updated reference set using Minimap2.
minimap2 -ax sr --secondary=no ref.paths.fa simulated_1M.gam.fastq > temp_minimap.sam

# Filter unmapped reads from the second mapping.
awk '/^@/ || $3 != "*"' temp_minimap.sam > mapped.no_unmapped.minimap.2.sam

# Inject the filtered mappings back into the VG graph.
vg inject -x cactus_autoindex_new.giraffe.ref_set.gbz mapped.no_unmapped.minimap.2.sam > mapped.2.gam

# Annotate the mappings to prepare for comparison.
vg annotate -a mapped.2.gam -m -x cactus_autoindex_new.giraffe.ref_set.gbz > temp_anno.2.gam

# Compare mappings to assess accuracy and alignment.
vg gamcompare -s -r 100 -T temp_anno.2.gam simulated_1M.gam > minimap.scores.2.tsv

# Step 7: Generate Cumulative Rates
# Create a file to summarize alignment and correctness rates.
echo -e "min_mapQ\treads_aligned\treads_aligned_correctly" > minimap_cumulative_rates.tsv

# Calculate cumulative rates from the scores file.
awk 'NR>1 {aligned[$2]++} NR>1&&$1==1{correct[$2]++} END{OFS="\t"; for (i in aligned) print i, aligned[i], correct[i]}' minimap.scores.2.tsv > temp_aligned_correct.tsv

# Sort results by minimum mapping quality in descending order.
sort -nrk1,1 temp_aligned_correct.tsv > temp_sorted.tsv

# Compute cumulative alignment and correctness statistics.
awk '{OFS="\t"; cum_aligned+=$2; cum_correct+=$3; print $1, cum_aligned, cum_correct}' temp_sorted.tsv >> minimap_cumulative_rates.tsv

# The final cumulative rates are stored in `minimap_cumulative_rates.tsv`.
